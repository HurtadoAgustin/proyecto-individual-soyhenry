{"version":3,"sources":["reportWebVitals.js","pages/Landing/Landing.js","containers/Header/Header.js","utils/constants.js","redux/actions.js","components/CountryCard/CountryCard.js","components/ErrorHandler/ErrorHandler.js","components/CountryList/CountryList.js","utils/initialObjects.js","components/ListFilters/ListFilters.js","components/PageCounter/PageCounter.js","pages/Home/Home.js","components/CountryDetailCard/CountryDetailCard.js","pages/CountryDetail/CountryDetail.js","containers/ActivityForm/ActivityForm.js","pages/CreateActivity/CreateActivity.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Landing","className","to","Header","props","title","path","link","color","children","API_PATH","SEASONS","GET_ALL_COUNTRIES","GET_COUNTRIES_BY_NAME","GET_COUNTRY","CLEAR_COUNTRY","SAVE_FILTERS","POST_ACTIVITY","SAVE_ERROR","CLEAR_ERROR","getAllCountries","dispatch","axios","response","data","type","payload","catch","error","message","saveFilters","filters","CountryCard","id","name","flag","continent","src","alt","CountryList","useDispatch","countries","useSelector","state","useState","countryList","setCountryList","useEffect","text","length","typeAlpha","sort","a","b","toUpperCase","population","sortAsc","reverse","filter","country","COUNTRIES_PER_PAGE","page","dataPerPage","i","el","push","map","initialState","allCountries","continents","initialFilters","activity","initialFormValues","difficulty","duration","season","ListFilters","globalFilters","setFilters","onChangeHandler","e","target","value","onToggleHandler","onChange","autoComplete","onClick","index","PageCounter","window","scrollTo","Home","CountryDetail","idCountry","getCountry","capital","subregion","area","Activities","match","params","ActivityForm","countriesRef","useRef","errorText","setErrorText","formValues","setFormValues","countriesFlags","setCountriesFlags","deleteSelectedHandler","console","log","newValues","onResetHandler","current","onSubmit","input","preventDefault","activityData","post","min","max","step","list","ref","countrySelected","find","countryName","CreateActivity","App","exact","component","LandingPage","rootReducer","action","Set","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da725f57.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Landing.css';\r\n\r\nfunction Landing() {\r\n  return (\r\n  <main className='landing--background'>\r\n    <Link to='/home'>\r\n      <button className='landing--button'>\r\n        <span>Start the Journey!</span>\r\n      </button>\r\n    </Link>\r\n  </main>)\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  const { title, path, link, color } = props;\r\n  return <header className={`header header--${color}`}>\r\n    <Link to='/'>\r\n      <button className={`header--link header--link__${color}`}>\r\n        <span>Go Landing</span>\r\n      </button>\r\n    </Link>\r\n    <div className='header--middle'>\r\n      <h1>{title}</h1>\r\n      {props.children}\r\n    </div>\r\n    <Link to={path}>\r\n      <button className={`header--link header--link__${color}`}> \r\n        <span>{link}</span>\r\n      </button>\r\n    </Link>\r\n  </header>\r\n}\r\n\r\nexport default Header;","export const API_PATH = 'http://localhost:3001';\r\n\r\nexport const SEASONS = ['summer', 'autumn', 'winter', 'spring'];","import axios from 'axios';\r\nimport { API_PATH } from '../utils/constants.js';\r\n\r\nexport const GET_ALL_COUNTRIES = 'GET_ALL_COUNTRIES';\r\nexport const GET_COUNTRIES_BY_NAME = 'GET_COUNTRIES_BY_NAME';\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\nexport const CLEAR_COUNTRY = 'CLEAR_COUNTRY';\r\nexport const SAVE_FILTERS = 'SAVE_FILTERS';\r\nexport const POST_ACTIVITY = 'POST_ACTIVITY';\r\nexport const SAVE_ERROR = 'SAVE_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\n\r\nexport const getAllCountries = () =>\r\n  dispatch =>\r\n    axios(`${API_PATH}/countries`)\r\n      .then(response => response.data)\r\n      .then(data => dispatch({\r\n        type: GET_ALL_COUNTRIES,\r\n        payload: data,\r\n      }))\r\n      .catch(error => dispatch({\r\n        type: SAVE_ERROR,\r\n        payload: error.message,\r\n      }))\r\n;\r\n\r\nexport const getCountriesByName = ( text ) =>\r\n  dispatch =>\r\n    axios(`${API_PATH}/countries?name=${text}`)\r\n      .then(response => response.data)\r\n      .then(data => dispatch({\r\n        type: GET_COUNTRIES_BY_NAME,\r\n        payload: data,\r\n      }))\r\n      .catch(error => dispatch({\r\n        type: SAVE_ERROR,\r\n        payload: error.message,\r\n      }))\r\n;\r\n\r\nexport const getCountry = ( idCountry ) =>\r\n  dispatch =>\r\n    axios(`${API_PATH}/countries/${idCountry}`)\r\n      .then(response => response.data)\r\n      .then(data => dispatch({\r\n        type: GET_COUNTRY,\r\n        payload: data[0],\r\n      }))\r\n      .catch(error => dispatch({\r\n        type: SAVE_ERROR,\r\n        payload: error.message,\r\n      }))\r\n;\r\n\r\nexport const clearCountry = () => {\r\n  return { type: CLEAR_COUNTRY }\r\n};\r\n\r\nexport const saveFilters = ( filters ) => {\r\n  return {\r\n    type: SAVE_FILTERS,\r\n    payload: filters,\r\n  }\r\n}\r\n\r\nexport const postActivity = ( activityData ) =>\r\n  dispatch =>\r\n    axios.post(`${API_PATH}/activities`, activityData)\r\n      .then(response => response.data)\r\n      .then(data => dispatch({\r\n        type: POST_ACTIVITY,\r\n        payload: data,\r\n      }))\r\n      .catch(error => dispatch({\r\n        type: SAVE_ERROR,\r\n        payload: error.message,\r\n      }))\r\n;\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: CLEAR_ERROR,\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CountryCard.css';\r\n\r\nfunction CountryCard({id, name, flag, continent}) {\r\n  return <Link\r\n      to={`/country/${id}`}\r\n      className='country-card--link'\r\n    >\r\n      <img\r\n        className='country-card--img'\r\n        src={flag}\r\n        alt='country flag'/>\r\n      <h3\r\n        className='\r\n          country-card--text\r\n          country-card--text__continent\r\n        '\r\n      >\r\n        {continent}\r\n      </h3>\r\n      <h2\r\n        className='\r\n          country-card--text\r\n          country-card--text__name\r\n        '\r\n      >\r\n        {name}\r\n      </h2>\r\n    </Link>\r\n}\r\n\r\nexport default CountryCard;","import React from 'react';\r\nimport './ErrorHandler.css';\r\n\r\nfunction CountryList({ type, message }) {\r\n\r\n  return <span className={`error-handler--${type}`}>\r\n      {message}\r\n    </span>\r\n}\r\n\r\nexport default CountryList;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCountries, getCountriesByName, clearError } from '../../redux/actions.js';\r\nimport CountryCard from '../CountryCard/CountryCard.js';\r\nimport ErrorHandler from '../ErrorHandler/ErrorHandler.js';\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector(state => state.countries);\r\n  const filters = useSelector(state => state.filters);\r\n  const error = useSelector(state => state.error);\r\n  const [countryList, setCountryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearError());\r\n    dispatch(\r\n      (!filters.text)\r\n      ? getAllCountries()\r\n        : getCountriesByName(filters.text)  \r\n    );\r\n  }, [dispatch, filters]);\r\n  \r\n  useEffect(() => {\r\n    let data = [...countries];\r\n    if(!data.length) return;\r\n\r\n    data = (!!filters.typeAlpha)\r\n      ? data.sort((a,b) => a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1)\r\n      : data.sort((a,b) => a.population - b.population)\r\n    ;\r\n    if(!filters.sortAsc) data = data.reverse();\r\n    if(!!filters.continent) data = data.filter(country => country.continent === filters.continent);\r\n    \r\n    const COUNTRIES_PER_PAGE = (filters.page === 0) ? 9 : 10; \r\n    const dataPerPage = [];\r\n    for(let i = 0; i < COUNTRIES_PER_PAGE; i++){\r\n      let el = (COUNTRIES_PER_PAGE * filters.page) + i;\r\n      if(data[el]) dataPerPage.push(data[el]);\r\n    }\r\n\r\n    if(!dataPerPage.length) return;\r\n    setCountryList(dataPerPage);\r\n  },[countries, filters])\r\n\r\n  return <>{ ( !error )\r\n    ? countryList?.map(country =>\r\n    <CountryCard\r\n      key={country.id}\r\n      id={country.id}\r\n      name={country.name}\r\n      flag={country.flag}\r\n      continent={country.continent}\r\n    />)\r\n    : <ErrorHandler type='grey' message={error}/>\r\n  }\r\n  </>\r\n}\r\n\r\nexport default CountryList;","// used in ../redux/reducer.js\r\nexport const initialState = {\r\n  allCountries: [],\r\n  countries: [],\r\n  country: {},\r\n  filters: {},\r\n  continents: [],\r\n  error: '',\r\n};\r\n\r\n// used in ../containers/ListFilters.js\r\nexport const initialFilters = {\r\n  page: 0,\r\n  text: '',\r\n  sortAsc: false, // true: sort ascending, false: sort descending\r\n  typeAlpha: false, // true: alphabetical, false: population\r\n  continent: '',\r\n  activity: {},\r\n}\r\n\r\n// used in ../containers/ActivityForm.js\r\nexport const initialFormValues = {\r\n  name: '',\r\n  difficulty: 0,\r\n  duration: 0,\r\n  season: '',\r\n  countries: [],\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveFilters } from '../../redux/actions.js';\r\nimport { initialFilters } from '../../utils/initialObjects.js';\r\nimport './ListFilters.css';\r\n\r\nfunction ListFilters() {\r\n  const dispatch = useDispatch();\r\n  const continents = useSelector(state => state.continents);\r\n  const globalFilters = useSelector(state => state.filters);\r\n  const [filters, setFilters] = useState(initialFilters);\r\n\r\n  useEffect(() => {\r\n    dispatch(saveFilters(filters));\r\n  },[dispatch, filters]);\r\n\r\n  const onChangeHandler = (e) => setFilters(\r\n    {...globalFilters, [e.target.name]: e.target.value}\r\n  );\r\n\r\n  const onToggleHandler = (e) => setFilters(\r\n    {...globalFilters, [e.target.name]: !filters[e.target.name]}\r\n  );\r\n\r\n  return <div className='list-filters'>\r\n    <input\r\n      className='list-filters--searcher'\r\n      name='text'\r\n      type='search'\r\n      value={filters.text}\r\n      onChange={onChangeHandler}\r\n      autoComplete='off'\r\n    />\r\n    <div className='list-filters--button__container'>\r\n      <div\r\n      className='list-filters--button'>\r\n        <span>Order:</span>\r\n        <button\r\n          name='sortAsc'\r\n          onClick={onToggleHandler}\r\n        >\r\n          {filters.sortAsc ? 'Ascending' : 'Descending'}\r\n        </button>\r\n      </div>\r\n      <div \r\n        className='list-filters--button'>\r\n        <span>Sort by:</span>\r\n        <button\r\n          name='typeAlpha'\r\n          onClick={onToggleHandler}\r\n        >\r\n          {filters.typeAlpha ? 'Alphabetical' : 'Population'}\r\n        </button>\r\n      </div>\r\n      <div className='list-filters--button'>\r\n        <span>Filter by:</span>\r\n        <select\r\n          name='continent'\r\n          value={filters.continent}\r\n          onChange={onChangeHandler}\r\n        >\r\n          <option value=''>\r\n            All Continents\r\n          </option>\r\n          {continents?.map((continent, index) =>\r\n            <option\r\n              className='list-filters--continents__item'\r\n              value={continent}\r\n              key={index}\r\n              >\r\n              {continent}\r\n            </option>)}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default ListFilters;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveFilters } from '../../redux/actions.js';\r\nimport { initialFilters } from '../../utils/initialObjects.js';\r\nimport './PageCounter.css';\r\n\r\nfunction PageCounter() {\r\n  const dispatch = useDispatch();\r\n  const globalFilters = useSelector(state => state.filters);\r\n  const [filters, setFilters] = useState(initialFilters);\r\n\r\n  useEffect(() => {\r\n    dispatch(saveFilters(filters));\r\n    window.scrollTo(0, 0);\r\n  },[dispatch, filters]);\r\n\r\n  const addPageHandler = () => setFilters({...globalFilters, page: filters.page + 1});\r\n\r\n  const discountPageHandler = () => {\r\n    if(filters.page > 0) setFilters({...globalFilters, page: filters.page - 1});\r\n  };\r\n\r\n  return <div className='counter'>\r\n    <button\r\n      className='\r\n        counter--items\r\n        counter--items__button\r\n      '\r\n      onClick={discountPageHandler}\r\n    >\r\n      -\r\n    </button>\r\n    <div className='\r\n      counter--items\r\n      counter--items__number\r\n    '>\r\n      {filters.page}\r\n    </div>\r\n    <button\r\n      className='\r\n        counter--items\r\n        counter--items__button\r\n      '\r\n      onClick={addPageHandler}\r\n    >\r\n      +\r\n    </button>\r\n  </div>\r\n}\r\n\r\nexport default PageCounter;","import React from 'react';\r\nimport Header from '../../containers/Header/Header.js';\r\nimport CountryList from '../../components/CountryList/CountryList.js';\r\nimport ListFilters from '../../components/ListFilters/ListFilters.js';\r\nimport PageCounter from '../../components/PageCounter/PageCounter.js';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  return <>\r\n    <Header\r\n      title='Country Searcher'\r\n      link='Create Activity!'\r\n      path='/create'\r\n      color='orange'\r\n    >\r\n      <ListFilters />\r\n    </Header>\r\n    <main className='home--main'>\r\n      <CountryList />\r\n    </main>\r\n    <footer className='home--footer'>\r\n      <PageCounter />\r\n    </footer>\r\n  </>\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCountry, clearCountry } from '../../redux/actions.js';\r\nimport './CountryDetailCard.css';\r\n\r\nfunction CountryDetail({ idCountry }) {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector(state => state.country);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountry(idCountry));\r\n    return () => {\r\n      dispatch(clearCountry());\r\n    };\r\n  }, [dispatch, idCountry]);\r\n\r\n  return <div className='card-detail--container'>\r\n    <img\r\n      className='card-detail--flag'\r\n      src={country.flag}\r\n      alt='country flag'\r\n    />\r\n    <div className='card-detail--info'>\r\n      <div className='card-detail--info__info'>\r\n        <h2>\r\n          {country.name} <i>({country.id})</i>\r\n        </h2>\r\n        <h3>- {country.capital} -</h3>\r\n        <span>Continent: {country.continent}</span>\r\n        <span>Subregion: {country.subregion}</span>\r\n        <span>Area: {country.area} m2</span>\r\n        <span>Population: {country.population} people</span>\r\n      </div>\r\n      <div className='card-detail--info__activities-container'>\r\n        {country.Activities?.length ? country.Activities.map(activity =>\r\n          <div className='card-detail--info__activities-item'>\r\n            <h3>{activity.name}</h3>\r\n            <span>Duration: {activity.duration}m</span>\r\n            <span>Difficulty: {activity.difficulty}</span>\r\n            <span>Season: {activity.season}</span>\r\n          </div>)\r\n          : <div className='card-detail--info__activities-link'>\r\n            <Link to='/create'>Add a new Activity!</Link>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default CountryDetail;","import React from 'react';\r\nimport CountryDetailCard from '../../components/CountryDetailCard/CountryDetailCard.js';\r\nimport Header from '../../containers/Header/Header.js';\r\nimport './CountryDetail.css';\r\n\r\nfunction CountryDetail(props) {\r\n  const idCountry = props.match.params.idCountry;\r\n\r\n  return <>\r\n    <Header \r\n      title='Country Detail'\r\n      link='Go Home'\r\n      path='/home'\r\n      color='orange'\r\n    />\r\n    <main className='detail--main'>\r\n      <CountryDetailCard idCountry={idCountry}/>\r\n    </main>\r\n  </>\r\n}\r\n\r\nexport default CountryDetail;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCountries, postActivity } from '../../redux/actions.js';\r\nimport { initialFormValues } from '../../utils/initialObjects.js';\r\nimport { SEASONS } from '../../utils/constants.js';\r\nimport './ActivityForm.css';\r\n\r\nfunction ActivityForm() {\r\n  const dispatch = useDispatch();\r\n  const allCountries = useSelector(state => state.allCountries);\r\n  const countriesRef = useRef('');\r\n  const [errorText, setErrorText] = useState('');\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [countriesFlags, setCountriesFlags] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllCountries());\r\n  },[dispatch]);\r\n  \r\n  /* ---- Handlers ---- */\r\n\r\n  const onChangeHandler = ( e ) => {\r\n    setFormValues({...formValues , [e.target.name]:e.target.value});\r\n    setErrorText('');\r\n  };\r\n\r\n  const deleteSelectedHandler = ( e ) => {\r\n    console.log(e.target)\r\n    const newValues = [...formValues.countries].filter(el => el !== e.target.id);\r\n    setFormValues({...formValues, countries: newValues})\r\n    setCountriesFlags([...countriesFlags].filter(el => el.id !== e.target.id))\r\n  }\r\n  \r\n  const onResetHandler = () => {\r\n    setFormValues(initialFormValues);\r\n    setCountriesFlags([]);\r\n    countriesRef.current.value = '';\r\n    setErrorText('');\r\n  }\r\n\r\n  /* ---- Form Validations ---- */\r\n  \r\n  const onCountryAddHandler = () => {\r\n    if(!allCountries.length) return setErrorText('Error: please wait a second to call to the database');\r\n    const countrySelected = countriesRef.current.value.toUpperCase();\r\n    \r\n    const countryFinder = ( country ) => {\r\n      const countryName = country.name.toUpperCase();\r\n      return country.id === countrySelected || countryName === countrySelected;\r\n    }\r\n    const country = allCountries.find(countryFinder);\r\n    if(!country) return setErrorText('Error: write a real country.');\r\n    \r\n    const isRepeat = [...formValues.countries].find(el => el === country.id);\r\n    if(!!isRepeat) return setErrorText('Error: country is already added.');\r\n    \r\n    setFormValues({...formValues, countries: [...formValues.countries, country.id]});\r\n    setCountriesFlags([...countriesFlags, {id: country.id, flag: country.flag}]);\r\n    countriesRef.current.value = '';\r\n    setErrorText('');\r\n  }\r\n  \r\n  const onSubmitHandler = ( e ) => {\r\n    e.preventDefault();\r\n    for(const input in formValues){\r\n      if(!formValues[input] || formValues[input] === \"0\") return setErrorText(`Error: ${input} needed.`);\r\n    }\r\n    if(formValues.countries.length < 1) return setErrorText('Error: one country at least is needed.');\r\n    if(formValues.name.length < 3) return setErrorText('Error: name of activity too short.');\r\n    // submit\r\n    dispatch(postActivity(formValues));\r\n    onResetHandler();\r\n  }\r\n\r\n  return <form id='form' onSubmit={onSubmitHandler}>\r\n    <div className='form--container'>\r\n      <div className='form--field'>\r\n        <label>Name: </label>\r\n        <input\r\n          className='form--input'\r\n          name='name'\r\n          type='text'\r\n          value={formValues.name}\r\n          onChange={onChangeHandler}\r\n          autoComplete='off'\r\n        />\r\n      </div>\r\n      <div className='form--field'>\r\n        <label>Difficulty: </label>\r\n        <input\r\n          className='form--field__range'\r\n          name='difficulty'\r\n          type='range'\r\n          min={0}\r\n          max={5}\r\n          step={1}\r\n          value={formValues.difficulty}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <span>{formValues.difficulty}</span>\r\n      </div>\r\n      <div className='form--field'>\r\n        <label>Duration: </label>\r\n        <input\r\n          className='form--field__range'\r\n          name='duration'\r\n          type='range'\r\n          min={0}\r\n          max={1440}\r\n          step={15}\r\n          value={formValues.duration}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <span>\r\n          {formValues.duration} minutos\r\n        </span>\r\n      </div>\r\n      <div className='form--field'>\r\n        <label>Season: </label>\r\n        <select\r\n          className='form--field__season'\r\n          name='season'\r\n          value={formValues.season}\r\n          onChange={onChangeHandler}\r\n        >\r\n          <option value=''></option>\r\n          {SEASONS?.map((season, index) =>\r\n            <option\r\n              value={season}\r\n              key={index}\r\n            >\r\n              {season}\r\n            </option>  \r\n          )}\r\n        </select>\r\n      </div>\r\n      <div className='form--field'>\r\n        <label>Countries: </label>\r\n        <input\r\n          list='opts'\r\n          ref={countriesRef}\r\n        />\r\n        <datalist id='opts'>\r\n          {allCountries?.map(country =>\r\n            <option\r\n              value={country.name}\r\n              key={country.id}\r\n            >\r\n              {country.id}\r\n            </option>\r\n          )}\r\n        </datalist>\r\n        <button\r\n          type='button'\r\n          onClick={onCountryAddHandler}\r\n        >\r\n          Add Country\r\n        </button>\r\n      </div>\r\n      <div className='form--field form--field__options'>\r\n        <button type='submit'>\r\n          Create\r\n        </button>\r\n        <button\r\n          type='button'\r\n          onClick={onResetHandler}\r\n        >\r\n          Reset\r\n        </button>\r\n        {errorText && <span>{errorText}</span>}\r\n      </div>\r\n    </div>\r\n    <div className='form--field__country-list'>\r\n      <span>Countries Selected:</span>\r\n      <div className='country-list--container'>\r\n        {[...countriesFlags].map(country => \r\n          <div key={country.id} >\r\n            <img src={country.flag} alt='country selected'/>\r\n            <button\r\n              id={country.id}\r\n              type='button'\r\n              onClick={deleteSelectedHandler}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default ActivityForm;","import React from 'react';\r\nimport Header from '../../containers/Header/Header.js';\r\nimport ActivityForm from '../../containers/ActivityForm/ActivityForm.js';\r\nimport './CreateActivity.css';\r\n\r\nfunction CreateActivity() {\r\n  return <>\r\n    <Header\r\n      title='Activity Creator'\r\n      link='Go Home'\r\n      path='/home'\r\n      color='blue'\r\n    />\r\n    <ActivityForm />\r\n  </>\r\n}\r\n\r\nexport default CreateActivity;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport LandingPage from './pages/Landing/Landing.js';\nimport Home from './pages/Home/Home.js';\nimport CountryDetail from './pages/CountryDetail/CountryDetail.js';\nimport CreateActivity from './pages/CreateActivity/CreateActivity.js';\nimport './assets/styles/globalStyles.css';\n\nfunction App() {\n  return <>\n    <Route exact path='/' component={LandingPage} />\n    <Route path='/home' component={Home} />\n    <Route path='/country/:idCountry' component={CountryDetail} />\n    <Route path='/create' component={CreateActivity} />\n  </>\n}\n\nexport default App;\n","import { initialState } from '../utils/initialObjects.js';\r\nimport {\r\n  GET_ALL_COUNTRIES,\r\n  GET_COUNTRIES_BY_NAME,\r\n  GET_COUNTRY,\r\n  CLEAR_COUNTRY,\r\n  SAVE_FILTERS,\r\n  POST_ACTIVITY,\r\n  SAVE_ERROR,\r\n  CLEAR_ERROR,\r\n} from './actions.js';\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case GET_ALL_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        allCountries: action.payload.map(el => { return {\r\n          id: el.id,\r\n          name: el.name,\r\n          flag: el.flag,\r\n        }}),\r\n        countries: action.payload,\r\n        continents: [...new Set(action.payload.map(el => el.continent))],\r\n      }\r\n    case GET_COUNTRIES_BY_NAME:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      }\r\n    case GET_COUNTRY:\r\n      return {\r\n        ...state,\r\n        country: action.payload,\r\n      }\r\n    case CLEAR_COUNTRY:\r\n      return {\r\n        ...state,\r\n        country: {},\r\n      }\r\n    case SAVE_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload,\r\n      }\r\n    case POST_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        //status change\r\n      }\r\n    case SAVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: '',\r\n      }\r\n    default:\r\n      return { ...state }\r\n  };\r\n};\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducer.js';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}